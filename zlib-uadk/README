依赖环境：
uadk2.4以上版本
g++
numactl

uadk安装：
从https://github.com/Linaro/uadk/archive/refs/tags/v2.4.zip下载uadk2.4版本并解压
进入解压目录，依次执行:
./cleanup.sh
./autogen.sh
./conf.sh
make
make install


编译命令：
g++ -shared -fPIC -O3  -I/usr/local/include/uadk -L/usr/local/lib -lwd -lwd_comp -lnuma -lhisi_zip -o libzuadk.so zlib_uadk.cc

编译完成之后需要给libzuadk.so增加两个软链接(libz.so和libz.so.1)并放到与系统zlib库不同的目录下（推荐/usr/local/lib）
应用使用的时候需要做如下设置：
LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH ./your_command
通过改变lib库的加载顺序加载uadk所使用的zlib库，其他不希望使用uadk的程序正常执行即可

-------------------------------------------------------------------------------------------------------------------------------
环境变量名称	               | 说明	                                |可选值	                                         |默认值|
-------------------------------------------------------------------------------------------------------------------------------
UADK_USE_SINGLE_DEV           |表示zlib库申请队列的时候是否从单一设备申请 |0：从所有设备平均申请队列，加速器负载大的时候使用   |0    |
                              |                                        |1：根据当前所使用的cpu选择对应的设备申请队列，     |     |
                              |                                        |只使用单片设备，并且加速器负载不大时使用           |     |
------------------------------------------------------------------------------------------------------------------------------
WD_COMP_EPOLL_EN	          |是否打开epoll模式	                    |0：不启用，小数据块场景使用                       |0    |
                              |                                        |1：启用，大数据块场景使用                         |     |
-------------------------------------------------------------------------------------------------------------------------------
UADK_COMPRESS_CTX_NUM	      |压缩所使用的队列数	                     |1~1024，根据压缩任务并发度配置                   |4     |
-------------------------------------------------------------------------------------------------------------------------------
UADK_DECOMPRESS_CTX_NUM       |	解压所使用的队列数	                     |1~1024，根据解压任务并发度配置                   |4     |
-------------------------------------------------------------------------------------------------------------------------------
UADK_USE_COMP_BUFFER          |压缩的时候是否使用中间缓冲区               |0：不使用 1：使用                               |1     |
-------------------------------------------------------------------------------------------------------------------------------
UADK_USE_DECOMP_BUFFER        |解压的时候是否使用中间缓冲区	              |0：不使用 1：使用                               |1     |
-------------------------------------------------------------------------------------------------------------------------------
UADK_COMP_INPUT_BUFFER_SIZE	  |压缩输入缓冲区大小(Bytes)                 |1~2^64-1                                       |65536 |
-------------------------------------------------------------------------------------------------------------------------------
UADK_COMP_OUTPUT_BUFFER_SIZE  |	压缩输出缓冲区大小(Bytes)                |1~2^64-1                                       |65536 |
-------------------------------------------------------------------------------------------------------------------------------
UADK_DECOMP_INPUT_BUFFER_SIZE |	解压输入缓冲区大小(Bytes)                |1~2^64-1                                       |65536 |
-------------------------------------------------------------------------------------------------------------------------------
UADK_DECOMP_OUTPUT_BUFFER_SIZE|	解压输出缓冲区大小(Bytes)                |1~2^64-1                                       |65536 |
-------------------------------------------------------------------------------------------------------------------------------
UADK_INFLATE_FORCE_FLUSH	  |解压的时候是否强制将缓冲区数据全部刷写到用户|0：当inflate函数的flush参数为Z_NO_FLUSH的时候，   |1    |
                              |输出空间中，只有在UADK_USE_DECOMP_BUFFER  |输入缓冲区必须填满才往加速器设备提交解压请求        |    |
                              |设置为启用的时候生效                      |1：只要输入缓冲区有数据，都会往加速器设备提交解压请求|    |
-------------------------------------------------------------------------------------------------------------------------------
